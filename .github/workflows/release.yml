name: Release

on:
  push:
    branches:
      - "main"
      - "beta"
      - "next"
      - "3.x"
  pull_request:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Init
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "yarn"
      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
          restore-keys: |
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm run test -- -- --coverage --verbose
        env:
          UPSTASH_REDIS_URL: ${{ secrets.UPSTASH_REDIS_URL }}
          UPSTASH_REDIS_KEY: ${{ secrets.UPSTASH_REDIS_KEY }}
      - name: Coverage
        uses: codecov/codecov-action@v1
        with:
          directory: ./coverage
          fail_ci_if_error: false
  release-branch:
    name: Publish branch
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'push' }}
    environment: Production
    steps:
      - name: Init
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "yarn"
      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
          restore-keys: |
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile
      - name: Publish to npm and GitHub
        run: |
          git config --global user.email "balazsorban44@users.noreply.github.com"
          git config --global user.name "BalÃ¡zs OrbÃ¡n"
          yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN_PKG: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN_ORG: ${{ secrets.NPM_TOKEN_ORG }}
          DRY_RUN: true
  release-pr:
    name: Publish PR
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'pull_request' }}
    environment: Preview
    steps:
      - name: Init
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: "yarn"
      - name: Cache Node Modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
          restore-keys: |
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-${{ github.run_id }}
            cache-node_modules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile
      - name: Determine version
        uses: ./.github/version-pr
        id: determine-version
        env:
          PR_NUMBER: ${{ github.event.number }}
      - name: Publish to npm
        run: |
          cd packages/next-auth
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
          npm publish --access public --tag experimental
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Comment version on PR
        uses: NejcZdovc/comment-pr@v1
        with:
          message: "ðŸŽ‰ Experimental release [published on npm](https://www.npmjs.com/package/next-auth/v/${{ env.VERSION }})!\n\n```sh\nnpm i next-auth@${{ env.VERSION }}\n```\n```sh\nyarn add next-auth@${{ env.VERSION }}\n```"
        env:
          VERSION: ${{ steps.determine-version.outputs.version }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
